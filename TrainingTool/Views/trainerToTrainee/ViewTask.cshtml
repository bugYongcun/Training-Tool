@model IEnumerable<TrainingTool.Models.taskRecord>
@{
    TrainingTool.Repository.TrainingToolContext db=new TrainingTool.Repository.TrainingToolContext();
    string trainer = ViewData["trainer"] as string;
    string trainee = ViewData["trainee"] as string;
}
<link href="/Content/bootstrap1.css" rel="stylesheet" type="text/css" />
<link href="/Content/bootstarp1.min.css" rel="stylesheet" type="text/css" />
<div class="navbar">
            @{
                HttpCookie _cookie = Request.Cookies["User"];
                string nowUserId = _cookie["EmployeeId"];
            }
            <div class="navbar-inner">
                <a class="brand" href="#">Equities Training Portal</a>
                <ul class="nav">
                    <li>@Html.ActionLink("Index", "Index", "Course", new { lastTime = DateTime.Now, userId = nowUserId }, new { })</li>
                    <li class="divider-vertical"></li>
                    <li>@Html.ActionLink("Study Management", "studentIndex", "Course", new { lastTime = DateTime.Now, userId = nowUserId }, new { })</li>
                    <li>@Html.ActionLink("Course Management", "teachersIndex", "Course", new { lastTime = DateTime.Now, userId = nowUserId }, new { })</li>
               <li>@Html.ActionLink("My Trainees", "ViewTrainee", "trainerToTrainee", new { trainerID = nowUserId }, new { })</li>
                     </ul>
            </div>
    </div>


<div class="row-fluid">
    <div class="span2"></div>
    <div class ="span8">
    <h2>View Task</h2>
<table class="table table-hover table-striped">
    <tr class="info">
       <td>
            <strong>Name</strong>
        </td>
        <td>
            <strong>Category</strong>
        </td>
        <td>
            <strong>Author's Name</strong>
        </td>
        
        <td>
            <strong>Author's Department</strong>
        </td>
         <td>
            <strong>Time</strong>
        </td>
        <td>

        </td>
    </tr>

@foreach (var item in Model) {
   TrainingTool.Models.Course course= db.Courses.Find(item.courseID);
   TrainingTool.Models.User author = db.User.FirstOrDefault(u => u.EmployeeId == course.TeacherID);
    <tr>
        <td>
            @Html.Label(course.Name)
        </td>
        <td>
            @Html.Label(course.Type)
        </td>
        <td>
            @Html.Label(author.UserName)
        </td>
        
        <td>
            @Html.Label(author.DepartmentId)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.taskTime)
        </td>
        <td>
            @*@Html.ActionLink("DeleteTask", "DeleteTask", new {trainerID=trainer,traineeID=trainee,courseID=item.courseID}) *@
            <button class="btn  btn-primary" type="button" onclick="location.href='@Url.Action("DeleteTask", "trainerToTrainee",new {trainerID=trainer,traineeID=trainee,courseID=item.courseID})'">Delete Task</button>
        <button class="btn  btn-primary" type="button" onclick="location.href='@Url.Action("TaskDetail", "trainerToTrainee",new {trainerID=trainer,traineeID=trainee,courseID=item.courseID})'">Detail</button>
        
        </td>
    </tr>
}

</table>
   </div>
    <div class="span2"></div>
</div>
 <button class="btn  btn-primary" type="button" onclick="location.href='@Url.Action("ViewTrainee",new {trainerID=nowUserId})'">Go Back</button>
