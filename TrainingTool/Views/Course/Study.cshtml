@model PagedList.StaticPagedList<TrainingTool.Models.Course>

@using PagedList
@using PagedList.Mvc
@{
    ViewBag.Title = "Study";
}
<link href="/Content/PagedList.css" rel="stylesheet" type="text/css" />
<script src="@Url.Content("/Scripts/bootstrap.js")" type="text/javascript"></script>

<script type="text/javascript">
    function open_collapseOne() {
        $("#collapseOne").collapse("show");
        $("#collapseTwo").collapse("hide");
        $("#collapseThree").collapse("hide");
    }
    function open_collapseTwo() {
        $("#collapseTwo").collapse("show");
        $("#collapseOne").collapse("hide");
        $("#collapseThree").collapse("hide");
    }
    function open_collapseThree() {
        $("#collapseThree").collapse("show");
        $("#collapseTwo").collapse("hide");
        $("#collapseOne").collapse("hide");
    }
</script>

<section id="course_page">
<div class="row-fluid">
    <div class="span3">
        <div class="container clearfix" style="max-width: 340px; padding: 8px 0; position:fixed;">
            <ul class="nav nav-list" >
                <li class="nav-header"><h4>List header</h4></li>
                <li><a href="#collapseOneTitle" onclick="open_collapseOne();"><h5>Language</h5></a></li>
                <li><a href="#collapseTwoTitle" onclick="open_collapseTwo();"><h5>Tachnique</h5></a></li>
                <li><a href="#collapseThreeTitle" onclick="open_collapseThree();"><h5>Applications</h5></a></li>
                <li class="divider"></li>
                <li><button class="btn btn-large btn-info" type="button" onclick="location.href='@Url.Action("Create", "Course")'">Create New Course</button></li>
            </ul>
         </div> 
       
             @*@Html.ActionLink("Create New", "Create")*@
    </div>



    <div class="span8">
        @*@Html.PagedListPager((PagedList.IPagedList)Model, page => Url.Action("Index", new { page = page }),new PagedListRenderOptions{ LinkToPreviousPageFormat = "上一页", LinkToNextPageFormat = "下一页" })*@
        @{
    
        List<TrainingTool.Models.CourseList> courses = ViewData["Courses"] as List<TrainingTool.Models.CourseList>;
      
        <div class="accordion" id="accordion2">
            <div class="accordion-group" id="collapseOneTitle">
                <div class="accordion-heading" >
                    <a class="accordion-toggle" data-toggle="collapse" data-parent="#accordion2" href="#collapseOne ">
                        <h3>Collapsible Group Item #1</h3>
                    </a>
                </div>
                <div id="collapseOne" class="accordion-body collapse in">
                    <div class="accordion-inner">
                        @{List<TrainingTool.Models.CourseList> list1 = courses.Where(o => (o.course.Type != null) && (o.type.typeID.StartsWith("1"))).ToList();
                          if(list1!=null){
                          foreach (var item in list1)
                        {
                            <table class="table table-bordered">
                                <tr class="success">
                                    <td>
                                        <h4>@Html.ActionLink(item.course.Name, "Details", new { precondition="allIndex",id=item.course.ID})</h4>
                                   
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.course.Type);
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.course.Introduction);
                                    </td>
                                </tr>
                            </table>
                         }
                         }
                         }
                    </div>
                </div>
            </div>
            <div class="accordion-group" id="collapseTwoTitle">
                <div class="accordion-heading">
                    <a class="accordion-toggle" data-toggle="collapse" data-parent="#accordion2" href="#collapseTwo">
                        <h3>Collapsible Group Item #2</h3>
                    </a>
                </div>
                <div id="collapseTwo" class="accordion-body collapse in">
                    <div class="accordion-inner">
                        @{List<TrainingTool.Models.CourseList> list2=courses.Where(o=>(o.course.Type != null)&&(o.type.typeID.StartsWith("2"))).ToList();
                          if(list1!=null){
                          foreach (var item in list2)
                        {
                            <table class="table table-bordered">
                                <tr class="success">
                                    <td>
                                        <h4>@Html.ActionLink(item.course.Name, "Details", new { precondition="allIndex",id=item.course.ID})</h4>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.course.Type);
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.course.Introduction);
                                    </td>
                                </tr>
                            </table>
                         }}
                          }
                    </div>
                </div>
            </div>
            <div class="accordion-group" id="collapseThreeTitle">
                <div class="accordion-heading" >
                    <a class="accordion-toggle" data-toggle="collapse" data-parent="#accordion2" href="#collapseThree">
                        <h3>Collapsible Group Item #3</h3>
                    </a>
                </div>
                <div id="collapseThree" class="accordion-body collapse in">
                    <div class="accordion-inner">
                        @{List<TrainingTool.Models.CourseList> list3=courses.Where(o=>(o.course.Type != null)&&(o.type.typeID.StartsWith("3"))).ToList();
                          if(list1!=null){
                          foreach (var item in list3)
                        {
                            <table class="table table-bordered">
                                <tr class="success">
                                    <td>
                                        <h4>@Html.ActionLink(item.course.Name, "Details", new { precondition="allIndex",id=item.course.ID})</h4>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.course.Type);
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.course.Introduction);
                                    </td>
                                </tr>
                            </table>
                            }}
                          }
                    </div>
                </div>
            </div>
        </div>          
   
    @*foreach(var item in courses)
    {
        <table class="table table-hover table-bordered">
        <tr>
            <td>
                @Html.ActionLink(item.course.Name, "Details", new { id=item.course.ID})
            </td>
        </tr>
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.course.Type);
            </td>
        </tr>
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.course.Introduction);
            </td>
        </tr>
        </table>
    }*@
}
@*@Html.Partial("_Paging")*@


@*@{
    foreach(var item in Model)
    {
        <br />
        @Html.ActionLink(item.Name, "Details", new { id=item.ID})
        <br />
        //@Html.DisplayFor(modelItem => item.course.Name);
        <br />
        @Html.DisplayFor(modelItem => item.Type);
        <br />
        @Html.DisplayFor(modelItem => item.Introduction);
        <br />
    }
}*@

    </div>
</div>
</section>

    
    





