@model TrainingTool.Models.Course


<script src="@Url.Content("/Scripts/jquery.raty.js")" type="text/javascript"></script>
<link href="/Content/bootstrap1.css" rel="stylesheet" type="text/css" />
<link href="/Content/bootstarp1.min.css" rel="stylesheet" type="text/css" />
@{
    ViewBag.Title = "Details";
  string teacherName= ViewData["teacherName"] as string;
  string teacherDepart = ViewData["teacherDepart"] as string;
 List<string> saveusers=  ViewData["saveusers"] as List<string>;
 List<string> taskusers = ViewData["taskusers"] as List<string>;
 List<string> testedUsers = ViewData["testedusers"] as List<string>;
 int testCount = (int)ViewData["testCount"];
 int hasTrainee = (int)ViewData["hasTrainee"];

}
 <script type="text/javascript">
      $('#star').raty();
 </script>
<body>
<div id="myModal" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" style="height:150px">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
        <h3 id="myModalLabel">Rate it!</h3>
    </div>
    <form method="post">
        <div class="modal-body">
            <fieldset>
                <label>Please rank this class from 1 to 10</label>
                <div id="star"></div>
                <input type="text" placeholder="Integer(1-10)" name="mark"/>
                <input type="text" value="@Model.ID" style="display:none" />
            </fieldset>  
        </div>
        <div class="modal-footer">
            <button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>
            <button class="btn btn-primary" type ="submit">Submit</button>
        </div>
    </form>
</div>
    <div class="navbar">
            @{
                HttpCookie _cookie = Request.Cookies["User"];
                string nowUserId = _cookie["EmployeeId"];
            }
            <div class="navbar-inner">
                <a class="brand" href="#">Equities Training Portal</a>
                <ul class="nav">
                    <li>@Html.ActionLink("Index", "Index", new { lastTime=DateTime.Now, userId = nowUserId})</li>
                    <li class="divider-vertical"></li>
                    <li>@Html.ActionLink("Study Management", "studentIndex", new { lastTime=DateTime.Now, userId = nowUserId })</li>
                    <li>@Html.ActionLink("Course Management", "teachersIndex", new { lastTime=DateTime.Now, userId = nowUserId })</li>
                     @{
                        if(hasTrainee==1)
                        {
                            <li>@Html.ActionLink("My Trainees", "ViewTrainee", "trainerToTrainee", new { trainerID = nowUserId }, new { })</li>
                        }
                    }
                </ul>
            </div>
    </div>
    <div class="row-fluid">
        <div class="span2"></div>
        <div class="span8" align="left">
                <h2>Details</h2>

                <table class="table table-bordered">
                    <tr style="background-color:#D5E2F7">
                        <td style="width:150px">
                            <h4>@Html.DisplayFor(model => model.Mark)
                                @{if(saveusers.Contains(nowUserId)||taskusers.Contains(nowUserId))
                                  {
                                <a href="#myModal" role="button" class="btn" data-toggle="modal">Rate it!</a>
                                }
                                }

                            </h4>
                        </td>
                        <td>
                            <h4>@Html.DisplayFor(model => model.Name)</h4> by @teacherName in @teacherDepart
                        </td>
                    </tr>
                    <tr style="background-color:#F1F5FC">
                        <td>Set Date</td>
                        <td>
                            @Html.DisplayFor(model => model.setDate)
                        </td>
                    </tr>
                    <tr style="background-color:#F1F5FC">
                        <td>Catagory</td>
                        <td>
                            @Html.DisplayFor(model => model.Type)
                        </td>
                    </tr>
                   
                    <tr style="background-color:#F1F5FC">
                        <td>Introduction</td>
                        <td>
                            @Html.DisplayFor(model => model.Introduction)
                        </td>
                    </tr>
                </table>
             <table class="table table-bordered">
            @{
                List<TrainingTool.Models.Chapter> chapters = ViewData["chapters"] as List<TrainingTool.Models.Chapter>;
                if(chapters!=null){
                foreach (TrainingTool.Models.Chapter c in chapters)
                {
                    string order = "CHAPTER "+ c.chapterID.ToString();
                <tr style="background-color:#F1F5FC">
                        <td style="width:150px">@order</td>
                        <td>
                             @Html.ActionLink(c.Name, "Details","Chapter",new{lastEnterTime=DateTime.Now,userId=nowUserId,id=c.ID},new{})
                        </td>
                    </tr>
                 }
                 }
           }
            </table>
            @* @{string filename = "Apress.Pro.ASP.NET.MVC.4.Framework.Jan.2013.pdf";  }
            <iframe src="~/Images/@filename" width="600" height="600" scrolling="yes" name="content"></iframe>
               
            <fieldset>
                <legend>Course</legend>

                <div class="display-label">
                    @Html.DisplayNameFor(model => model.setDate)
                </div>
                <div class="display-field">
                    @Html.DisplayFor(model => model.setDate)
                </div>
                <div class="display-label">
                    @Html.DisplayNameFor(model => model.TeacherID)
                </div>
                <div class="display-field">
                    @Html.DisplayFor(model => model.TeacherID)
                </div>

                <div class="display-label">
                    @Html.DisplayNameFor(model => model.Name)
                </div>
                <div class="display-field">
                    @Html.DisplayFor(model => model.Name)
                </div>

                <div class="display-label">
                    @Html.DisplayNameFor(model => model.Type)
                </div>
                <div class="display-field">
                    @Html.DisplayFor(model => model.Type)
                </div>

                <div class="display-label">
                    @Html.DisplayNameFor(model => model.Introduction)
                </div>
                <div class="display-field">
                    @Html.DisplayFor(model => model.Introduction)
                </div>

                <div class="display-label">
                    @Html.DisplayNameFor(model => model.url)
                </div>
                <div class="display-field">
                    @Html.DisplayFor(model => model.url)
                </div>

                <div class="display-label">
                    @Html.DisplayNameFor(model => model.Mark)
                </div>
                <div class="display-field">
                    @Html.DisplayFor(model => model.Mark)
                </div>
            </fieldset>*@
            @* <p align="middle">
                <button class="btn btn-large btn-info" type="button" onclick="location.href='@Url.Action("Create", "Chapter",new { id=Model.ID })'">Add New Chapter</button>
                <button class="btn btn-large btn-info" type="button" onclick="location.href='@Url.Action("Index", "Course")'">Back To List</button>
               @Html.ActionLink("Edit", "Edit", new { id=Model.ID }) |
                @Html.ActionLink("Back to List", "Index")
            </p>
            <p align="middle">
                <button class="btn btn-large btn-info" type="button" onclick="location.href='@Url.Action("Save", "Course",new { id=Model.ID })'">收藏课程</button>
                <button class="btn btn-large btn-info" type="button" onclick="location.href='@Url.Action("studentIndex", "Course", new { userId= nowUserId })'">Back To List</button>
            </p>*@
            <p align="middle">
                @{if(saveusers.Contains(nowUserId)){
                <button class="btn btn-large btn-primary" type="button" onclick="location.href='@Url.Action("unSave", "Course",new { id=Model.ID })'">Cancel Bookmark</button>
                }
                else{
                  <button class="btn btn-large btn-primary" type="button" onclick="location.href='@Url.Action("Save", "Course",new { id=Model.ID })'">Bookmark</button>
                }
                 if(testCount>0)
                {
                    if (testedUsers.Contains(nowUserId))
                    {
                         <button class="btn btn-large btn-info" type="button" onclick="location.href='@Url.Action("ViewTest", "Course", new { userId= nowUserId ,id=Model.ID})'">View Test</button>
                    }
                    else{
                <button class="btn btn-large btn-info" type="button" onclick="location.href='@Url.Action("Test", "Course", new { userId= nowUserId ,id=Model.ID})'">Having Test</button>
                }
                }
                }
               
            </p>
        </div>
        <div class="span2"></div>
    </div>
</body>
